package com.depromeet.memory.mock;

import com.depromeet.memory.MemoryDetail;
import com.depromeet.memory.repository.MemoryDetailRepository;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

public class FakeMemoryDetailRepository implements MemoryDetailRepository {
    private Long autoGeneratedId = 0L;
    private final List<MemoryDetail> data = new ArrayList<>();

    @Override
    public MemoryDetail save(MemoryDetail memoryDetail) {
        if (memoryDetail.getId() == null || memoryDetail.getId() == 0) {
            MemoryDetail newMemoryDetail =
                    MemoryDetail.builder()
                            .id(++autoGeneratedId)
                            .item(memoryDetail.getItem())
                            .heartRate(memoryDetail.getHeartRate())
                            .pace(memoryDetail.getPace())
                            .kcal(memoryDetail.getKcal())
                            .build();
            data.add(newMemoryDetail);
            return newMemoryDetail;
        } else {
            data.removeIf(item -> item.getId().equals(memoryDetail.getId()));
            data.add(memoryDetail);
            return memoryDetail;
        }
    }

    @Override
    public Optional<MemoryDetail> update(Long id, MemoryDetail updateMemoryDetail) {
        Optional<MemoryDetail> md = data.stream().filter(item -> item.getId().equals(id)).findAny();
        if (md.isEmpty()) {
            return Optional.empty();
        } else {
            MemoryDetail origin = md.get();
            return Optional.of(
                    MemoryDetail.builder()
                            .id(id)
                            .item(
                                    updateMemoryDetail.getItem() != null
                                            ? updateMemoryDetail.getItem()
                                            : origin.getItem())
                            .heartRate(
                                    updateMemoryDetail.getHeartRate() != null
                                            ? updateMemoryDetail.getHeartRate()
                                            : origin.getHeartRate())
                            .pace(
                                    updateMemoryDetail.getPace() != null
                                            ? updateMemoryDetail.getPace()
                                            : origin.getPace())
                            .kcal(
                                    updateMemoryDetail.getKcal() != null
                                            ? updateMemoryDetail.getKcal()
                                            : origin.getKcal())
                            .build());
        }
    }
}
