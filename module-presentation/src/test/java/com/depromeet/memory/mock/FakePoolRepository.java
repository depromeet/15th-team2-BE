package com.depromeet.memory.mock;

import com.depromeet.pool.FavoritePool;
import com.depromeet.pool.Pool;
import com.depromeet.pool.PoolSearch;
import com.depromeet.pool.repository.PoolRepository;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

public class FakePoolRepository implements PoolRepository {
    private Long autoGeneratedId = 0L;
    private final List<Pool> data = new ArrayList<>();

    @Override
    public List<Pool> findPoolsByName(String nameQuery) {
        return data.stream().filter(item -> item.getName().contains(nameQuery)).limit(3).toList();
    }

    @Override
    public List<FavoritePool> findFavoritePools(Long memberId) {
        return null;
    }

    @Override
    public List<PoolSearch> findSearchedPools(Long memberId) {
        return null;
    }

    @Override
    public Optional<Pool> findById(Long poolId) {
        return data.stream().filter(item -> item.getId().equals(poolId)).findAny();
    }

    @Override
    public Pool save(Pool pool) {
        return null;
    }
}
